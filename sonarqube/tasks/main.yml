---
# Update and upgrade packages
- name: Update and upgrade apt packages
  apt:
    update_cache: yes
    upgrade: dist
  become: true

# Install dependencies
- name: Install required packages
  apt:
    name:
      - wget
      - unzip
      - openjdk-17-jdk
      - openjdk-17-jre
    state: present
  become: true
- name: Add PostgreSQL key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present
  become: true
# Add PostgreSQL repository and install PostgreSQL
- name: Add PostgreSQL repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
    state: present
  become: true

# - name: Add PostgreSQL key
#   apt_key:
#     url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
#     state: present
#   become: true

- name: Install PostgreSQL
  apt:
    name:
      - postgresql
      - postgresql-contrib
    state: present
  become: true

- name: Ensure PostgreSQL is running and enabled
  service:
    name: postgresql
    state: started
    enabled: true
  become: true

# Configure PostgreSQL
- name: Set PostgreSQL password
  shell: "psql -c \"ALTER USER postgres PASSWORD '{{ postgres_password }}';\""
  become: true
  become_user: postgres
  #chmod u+rw /tmp/ansible*  # Grant read-write access to temporary files created by Ansible

    

- name: Create SonarQube database user
  postgresql_user:
    name: "{{ sonarqube_db_user }}"
    password: "{{ sonarqube_db_password }}"
    encrypted: yes
    state: present
  become: true
  become_user: postgres

- name: Create SonarQube database
  postgresql_db:
    name: "{{ sonarqube_db_name }}"
    owner: "{{ sonarqube_db_user }}"
    state: present
  become: true
  become_user: postgres

# Download and extract SonarQube
- name: Download SonarQube
  get_url:
    url: "{{ sonarqube_url }}"
    dest: /tmp/sonarqube.zip
  become: true

- name: Extract SonarQube
  unarchive:
    src: /tmp/sonarqube.zip
    dest: /opt
    remote_src: yes
  become: true

- name: Rename SonarQube directory
  command: mv /opt/sonarqube-{{ sonarqube_version }} {{ sonarqube_install_dir }}
  become: true

# Configure SonarQube user and permissions
- name: Create SonarQube group
  group:
    name: "{{ sonarqube_group }}"
    state: present
  become: true

- name: Create SonarQube user
  user:
    name: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    home: "{{ sonarqube_install_dir }}"
    comment: "User to run SonarQube"
    state: present
  become: true

- name: Set ownership for SonarQube directory
  file:
    path: "{{ sonarqube_install_dir }}"
    state: directory
    owner: "{{ sonarqube_user }}"
    group: "{{ sonarqube_group }}"
    recurse: yes
  become: true

# Configure SonarQube properties
- name: Configure SonarQube properties
  template:
    src: sonar.properties.j2
    dest: "{{ sonarqube_install_dir }}/conf/sonar.properties"
  become: true

- name: Configure SonarQube startup script
  template:
    src: sonar.sh.j2
    dest: "{{ sonarqube_install_dir }}/bin/linux-x86-64/sonar.sh"
  become: true

- name: Set executable permission for SonarQube script
  file:
    path: "{{ sonarqube_install_dir }}/bin/linux-x86-64/sonar.sh"
    mode: "0755"
  become: true

# Create and enable SonarQube service
- name: Create SonarQube systemd service
  template:
    src: sonar.service.j2
    dest: /etc/systemd/system/sonar.service
  become: true

- name: Reload systemd
  command: systemctl daemon-reload
  become: true

- name: Start and enable SonarQube service
  service:
    name: sonar
    state: started
    enabled: true
  become: true
